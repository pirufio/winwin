/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package com.winwin.http;

import java.io.IOException;
import java.io.InputStream;

import org.apache.http.HttpResponse;
import org.apache.http.client.ClientProtocolException;
import org.apache.http.client.HttpClient;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.entity.StringEntity;
import org.apache.http.impl.client.DefaultHttpClient;
import org.json.JSONObject;

import android.app.Activity;

import com.winwin.helpers.StreamHelper;

/**
 *
 * @author Franco
 */
public class HttpServiceHandler {
    
    private Activity _activity;
    
    public HttpServiceHandler(Activity activity ) {
        _activity = activity;
    }
    
     /**
     *
     * @param args [0] = email de usuario , [1] = contrasenia para el usuario
     * @return valor de retorno 0 = correcto
     * @throws IOException 
     * @throws ClientProtocolException 
     */
    protected String postAsJson(String url, JSONObject jsonObject) throws ClientProtocolException, IOException
    {
    	String result = "";
    	
		// 1. create HttpClient
		HttpClient httpclient = new DefaultHttpClient();
		
		// 2. make POST request to the given URL
        HttpPost httpPost = new HttpPost(url);
    	
        // 4. convert JSONObject to JSON to String
        String json = jsonObject.toString();

        // ** Alternative way to convert Person object to JSON string usin Jackson Lib 
        // ObjectMapper mapper = new ObjectMapper();
        // json = mapper.writeValueAsString(person); 

        // 5. set json to StringEntity
        StringEntity se = new StringEntity(json);

        // 6. set httpPost Entity
        httpPost.setEntity(se);

        // 7. Set some headers to inform server about the type of the content   
        httpPost.setHeader("Accept", "application/json");
        httpPost.setHeader("Content-type", "application/json");

        // 8. Execute POST request to the given URL
        HttpResponse httpResponse = httpclient.execute(httpPost);

        // 9. receive response as inputStream
        InputStream inputStream = httpResponse.getEntity().getContent();

        // 10. convert inputstream to string
        if(inputStream != null){
            result = StreamHelper.convertStreamToString(inputStream);
        }
    	// 11. return result
	    return result;
    }
    
    protected String getAsJsonString(String url) throws ClientProtocolException, IOException
    {
    	String result = "";
		HttpClient httpclient = new DefaultHttpClient();
		
        HttpGet httpGet = new HttpGet(url);
        httpGet.setHeader("Accept", "application/json");
        httpGet.setHeader("Content-type", "application/json");

        // 8. Execute POST request to the given URL
        HttpResponse httpResponse = httpclient.execute(httpGet);
     // 9. receive response as inputStream
        InputStream inputStream = httpResponse.getEntity().getContent();

        // 10. convert inputstream to string
        if(inputStream != null){
            result = StreamHelper.convertStreamToString(inputStream);
        }
        
        return result;
    }
}
