package com.winwin.andoid.app;

import org.codehaus.jackson.map.ObjectMapper;
import org.codehaus.jackson.*;
import org.json.JSONObject;

import android.app.Activity;
import android.os.AsyncTask;
import android.os.Bundle;
import android.support.v7.app.ActionBarActivity;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Toast;

import com.winwin.async.HttpPostJsonAsync;
import com.winwin.http.HttpServiceHandler;
import com.winwin.models.dto.UserLoginDTO;

public class MainActivity extends ActionBarActivity {

	 /** Called when the activity is first created.
     * @param savedInstanceState */
    @Override
    public void onCreate(Bundle savedInstanceState)
    {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        
        Button loginButton = (Button)findViewById(R.id.btn_login);
        loginButton.setOnClickListener(loginButtonOnClick);
    }
    
    private View.OnClickListener loginButtonOnClick 
            = new View.OnClickListener() {

        public void onClick(View v) {
            String[] args = {((EditText)findViewById(R.id.email))
                        .getText()
                        .toString(),
                ((EditText)findViewById(R.id.password))
                        .getText()
                        .toString()};
            new HttpAsyncTask().execute(args);
        }
    };
    
    private class HttpAsyncTask extends AsyncTask<String, Void, String> {
        @Override
        protected String doInBackground(String... urls) {
        	HttpServiceHandler handler = new HttpServiceHandler();
            UserLoginDTO userLoginDto = new UserLoginDTO("","");
            ObjectMapper mapper = new ObjectMapper();
            String jsonString = mapper.writeValueAsString(userLoginDto); 
            return handler.postAsJson(urls[0], jsonString);
        }
        // onPostExecute displays the results of the AsyncTask.
        @Override
        protected void onPostExecute(String result) {
        	
            Toast.makeText(getBaseContext(), result, Toast.LENGTH_LONG).show();
       
        }
    }

}
